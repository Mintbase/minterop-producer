services:
  postgres:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=minterop
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      retries: 3
      interval: 5s
    # turn off logging for postgress,
    # sometimes get mingled with app logs

  indexer:
    depends_on:
      postgres:
        condition: service_healthy
      # event_dispatcher:
      #   condition: service_healthy
      # metadata_resolver:
      #   condition: service_healthy
    volumes:
      - $PWD/.env:/app/.env
      - $HOME/.aws:/root/.aws
    environment:
      - POSTGRES=postgres://postgres:password@postgres:5432/minterop
      - S3_BUCKET_NAME=near-lake-data-testnet
      - S3_REGION_NAME=eu-central-1
      - RUST_LOG=minterop=debug
      - RPC_URL=http://event_dispatcher:3000/publish
      - MINTBASE_ROOT=mintspace2.testnet
    build:
      context: ./
      dockerfile: Dockerfile.dev

  emulator:
    image: quzhi65222714/gcp-pubsub-emulator
    ports:
      - "8085:8085"
    logging:
      driver: none

  event_dispatcher:
    image: gcr.io/omni-cloud-1/event-dispatcher:aa3322
    environment:
      #change DEBUG to * or debug for more logs
      - DEBUG=info
      - PUBSUB_PROJECT_ID=emulator
      - GCP_PUBSUB_TOPIC=ci-indexer-fanout
      - GCP_PUBSUB_SUBSCRIPTION_NAME=minterop-dispatched-ci
      - PUBSUB_TOPIC=test-topic
      - PUBSUB_SUBSCRIPTION_NAME=test-subscription
      - GOOGLE_APPLICATION_CREDENTIALS=./sa.json
      - PUBSUB_DEADLETTER_TOPIC=test-topic
      - SUBSCRIPTION_PUSH_ENDPOINT=http://metadata_resolver:8000/metadata
      - PUBSUB_EMULATOR_HOST=http://emulator:8085
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:3000/health"]
      interval: 5s
      retries: 3
      start_period: 10s

  ## TODO Make this get push requests from gcp somehow for testing
  metadata_resolver:
    image: gcr.io/omni-cloud-1/metadata-resolver:aa3322
    ports:
      # Allow sending local payloads for testing
      - "8000:8000"
    environment:
      - POSTGRES=postgres://postgres:password@postgres:5432/minterop
      - PORT=8000
      - NEAR_RPC_URL=https://rpc.testnet.near.org
      - MINTBASE_ROOT=mintspace2.testnet
      - RUST_LOG=metadata-resolver=debug
    volumes:
      - $PWD/.env:/app/.env
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:8000/health"]
      retries: 3
      interval: 2s

  tests:
    build:
      context: ./
      dockerfile: Dockerfile.test
    depends_on:
      - indexer
    volumes:
      - $PWD/.env:/app/.env
    environment:
      - POSTGRES=postgres://postgres:password@postgres:5432/minterop
    command: bash -c "while ping -c1 indexer &>/dev/null; do sleep 1; done; echo 'Indexer finished' && cargo test"
